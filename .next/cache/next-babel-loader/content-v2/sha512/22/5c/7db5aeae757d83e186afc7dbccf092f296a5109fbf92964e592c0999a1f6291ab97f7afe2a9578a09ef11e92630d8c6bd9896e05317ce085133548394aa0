{"ast":null,"code":"var _jsxFileName = \"D:\\\\Learning\\\\Learning\\\\HKI_NamTu\\\\MoHinhHoaPhanMem\\\\KTXSHOP\\\\Source\\\\FE-KTXSHOP-SELLER\\\\pages\\\\cms\\\\product\\\\new.js\";\nvar __jsx = React.createElement;\nimport { Box, Button, CircularProgress, Grid, Tab, Tabs, TextField } from \"@material-ui/core\";\nimport Image from 'next/image';\nimport LabelBox from \"../../../component/editor/label-box/index\";\nimport RichTextField from \"../../../component/editor/rich-text-field/index\";\nimport { doWithLoggedInUser, renderWithLoggedInUser } from \"../../../lib/login\";\nimport stylesGlobal from \"../../../component/css-global.module.css\";\nimport ImageUploadField from \"../../../component/image-upload-field\";\nimport Head from \"next/head\";\nimport Link from \"next/link\";\nimport React, { useEffect, useState } from \"react\";\nimport \"react-draft-wysiwyg/dist/react-draft-wysiwyg.css\";\nimport { useForm } from \"react-hook-form\";\nimport { MyCard, MyCardActions, MyCardContent, MyCardHeader } from \"../../../component/my-card/my-card\";\nimport { useRouter } from \"next/router\";\nexport async function loadProductData(ctx, createNew) {\n  return {\n    props: {\n      data: {}\n    }\n  };\n}\nexport async function getServerSideProps(ctx) {\n  return await doWithLoggedInUser(ctx, ctx => {\n    return loadProductData(ctx);\n  });\n}\nexport default function EditPage(props) {\n  return renderWithLoggedInUser(props, render);\n}\n\nfunction render(props) {\n  var _props$product;\n\n  const {\n    0: loading,\n    1: setLoading\n  } = useState(false);\n  const product = props === null || props === void 0 ? void 0 : (_props$product = props.product) === null || _props$product === void 0 ? void 0 : _props$product.data[0];\n  const {\n    0: price,\n    1: setPrice\n  } = useState();\n  const {\n    0: name,\n    1: setName\n  } = useState();\n  const {\n    0: imgUrl,\n    1: setImgUrl\n  } = useState();\n  const router = useRouter();\n\n  async function createProduct() {\n    var myHeaders = new Headers();\n    myHeaders.append(\"Content-Type\", \"application/json\");\n    await fetch(process.env.API_HOST + '/api/products', {\n      method: 'POST',\n      body: JSON.stringify({\n        data: {\n          name: name,\n          price: price,\n          imageUrl: imgUrl\n        }\n      }),\n      headers: myHeaders\n    }).then(response => response.json()).then(result => {\n      router.push(\"/cms/product\");\n    });\n  }\n\n  async function uploadImage(value) {\n    var formData = new FormData();\n    formData.append(\"files\", value);\n    await fetch(process.env.API_HOST + '/api/upload', {\n      method: 'POST',\n      body: formData\n    }).then(response => response.json()).then(result => {\n      setImgUrl(process.env.API_HOST + result[0].url);\n    });\n  } // func onSubmit used because useForm not working with some fields\n\n\n  async function onSubmit(formData) {\n    try {\n      await updateProduct(formData);\n    } catch (err) {\n      setLoading(false);\n      error(err.message || err.toString());\n    }\n  }\n\n  return __jsx(\"div\", {\n    select: \"/cms/product\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 9\n    }\n  }, __jsx(Head, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 13\n    }\n  }, __jsx(\"title\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 17\n    }\n  }, \"Th\\xF4ng tin s\\u1EA3n ph\\u1EA9m\")), __jsx(\"form\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 13\n    }\n  }, __jsx(MyCard, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 17\n    }\n  }, __jsx(MyCardHeader, {\n    title: \"Th\\xF4ng tin c\\u01A1 b\\u1EA3n\",\n    small: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 21\n    }\n  }), __jsx(MyCardContent, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 21\n    }\n  }, __jsx(Grid, {\n    container: true,\n    spacing: 6,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 25\n    }\n  }, __jsx(Grid, {\n    item: true,\n    xs: 12,\n    sm: 12,\n    md: 6,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 29\n    }\n  }, __jsx(TextField, {\n    id: \"name\",\n    name: \"name\",\n    variant: \"outlined\",\n    size: \"small\",\n    label: \"T\\xEAn s\\u1EA3n ph\\u1EA9m\",\n    placeholder: \"S\\u1EA3n ph\\u1EA9m A\",\n    InputLabelProps: {\n      shrink: true\n    },\n    style: {\n      width: \"100%\"\n    },\n    onChange: e => setName(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 33\n    }\n  })), __jsx(Grid, {\n    item: true,\n    xs: 12,\n    sm: 12,\n    md: 3,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 29\n    }\n  }, __jsx(TextField, {\n    id: \"price\",\n    name: \"price\",\n    variant: \"outlined\",\n    size: \"small\",\n    label: \"Gi\\xE1 ti\\u1EC1n\",\n    placeholder: \"100000\",\n    InputLabelProps: {\n      shrink: true\n    },\n    style: {\n      width: \"100%\"\n    },\n    onChange: e => setPrice(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 33\n    }\n  })), __jsx(Grid, {\n    item: true,\n    xs: 12,\n    sm: 12,\n    md: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 29\n    }\n  }, __jsx(\"input\", {\n    type: \"file\",\n    id: \"actual-btn\",\n    onChange: e => uploadImage(e.target.files[0]),\n    hidden: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 33\n    }\n  }), __jsx(\"label\", {\n    style: {\n      backgroundColor: \"indigo\",\n      color: \"white\",\n      padding: \"0.5rem\",\n      borderRadius: \"0.3rem\",\n      cursor: \"pointer\"\n    },\n    for: \"actual-btn\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 33\n    }\n  }, \"Choose File\")), imgUrl ? __jsx(Grid, {\n    style: {\n      padding: \"0\",\n      marginLeft: \"25px\"\n    },\n    item: true,\n    xs: 12,\n    sm: 12,\n    md: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 39\n    }\n  }, __jsx(Image, {\n    src: imgUrl,\n    height: 100,\n    width: 100,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 33\n    }\n  })) : null))), __jsx(MyCard, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 17\n    }\n  }, __jsx(MyCardActions, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 21\n    }\n  }, __jsx(Grid, {\n    container: true,\n    spacing: 1,\n    xs: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 154,\n      columnNumber: 25\n    }\n  }, __jsx(Grid, {\n    item: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 155,\n      columnNumber: 29\n    }\n  }, __jsx(Link, {\n    href: \"/cms/product\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 156,\n      columnNumber: 33\n    }\n  }, __jsx(Button, {\n    variant: \"contained\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 157,\n      columnNumber: 37\n    }\n  }, \"Tr\\u1EDF v\\u1EC1\"))), __jsx(Grid, {\n    item: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 162,\n      columnNumber: 29\n    }\n  }, __jsx(Button, {\n    variant: \"contained\",\n    color: \"primary\",\n    onClick: () => createProduct(),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 163,\n      columnNumber: 33\n    }\n  }, loading && __jsx(CircularProgress, {\n    size: 20,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 168,\n      columnNumber: 49\n    }\n  }), \"T\\u1EA1o m\\u1EDBi s\\u1EA3n ph\\u1EA9m\")))))));\n}\n\n;","map":{"version":3,"sources":["D:/Learning/Learning/HKI_NamTu/MoHinhHoaPhanMem/KTXSHOP/Source/FE-KTXSHOP-SELLER/pages/cms/product/new.js"],"names":["Box","Button","CircularProgress","Grid","Tab","Tabs","TextField","Image","LabelBox","RichTextField","doWithLoggedInUser","renderWithLoggedInUser","stylesGlobal","ImageUploadField","Head","Link","React","useEffect","useState","useForm","MyCard","MyCardActions","MyCardContent","MyCardHeader","useRouter","loadProductData","ctx","createNew","props","data","getServerSideProps","EditPage","render","loading","setLoading","product","price","setPrice","name","setName","imgUrl","setImgUrl","router","createProduct","myHeaders","Headers","append","fetch","process","env","API_HOST","method","body","JSON","stringify","imageUrl","headers","then","response","json","result","push","uploadImage","value","formData","FormData","url","onSubmit","updateProduct","err","error","message","toString","shrink","width","e","target","files","backgroundColor","color","padding","borderRadius","cursor","marginLeft"],"mappings":"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","sourcesContent":["import {\r\n    Box,\r\n    Button,\r\n    CircularProgress,\r\n    Grid,\r\n    Tab,\r\n    Tabs,\r\n    TextField,\r\n} from \"@material-ui/core\";\r\nimport Image from 'next/image'\r\nimport LabelBox from \"../../../component/editor/label-box/index\";\r\nimport RichTextField from \"../../../component/editor/rich-text-field/index\";\r\nimport { doWithLoggedInUser, renderWithLoggedInUser } from \"../../../lib/login\";\r\nimport stylesGlobal from \"../../../component/css-global.module.css\";\r\nimport ImageUploadField from \"../../../component/image-upload-field\";\r\nimport Head from \"next/head\";\r\nimport Link from \"next/link\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport \"react-draft-wysiwyg/dist/react-draft-wysiwyg.css\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport { MyCard, MyCardActions, MyCardContent, MyCardHeader } from \"../../../component/my-card/my-card\";\r\nimport { useRouter } from \"next/router\";\r\n\r\nexport async function loadProductData(ctx, createNew) {\r\n    return {\r\n        props: {\r\n            data: {}\r\n        },\r\n    };\r\n}\r\n\r\nexport async function getServerSideProps(ctx) {\r\n    return await doWithLoggedInUser(ctx, (ctx) => {\r\n        return loadProductData(ctx);\r\n    });\r\n}\r\n\r\nexport default function EditPage(props) {\r\n    return renderWithLoggedInUser(props, render);\r\n}\r\n\r\nfunction render(props) {\r\n\r\n    const [loading, setLoading] = useState(false);\r\n    const product = props?.product?.data[0];\r\n\r\n    const [price, setPrice] = useState();\r\n    const [name, setName] = useState();\r\n    const [imgUrl, setImgUrl] = useState();\r\n    const router = useRouter()\r\n\r\n    async function createProduct() {\r\n        var myHeaders = new Headers();\r\n        myHeaders.append(\"Content-Type\", \"application/json\")\r\n        await fetch(process.env.API_HOST + '/api/products', {\r\n            method: 'POST',\r\n            body: JSON.stringify({\r\n                data: {\r\n                    name: name,\r\n                    price: price,\r\n                    imageUrl: imgUrl\r\n                }\r\n            }),\r\n            headers: myHeaders\r\n        })\r\n            .then(response => response.json())\r\n            .then(result => {\r\n                router.push(\"/cms/product\")\r\n            })\r\n    }\r\n\r\n    async function uploadImage(value) {\r\n        var formData = new FormData();\r\n        formData.append(\"files\", value)\r\n        await fetch(process.env.API_HOST + '/api/upload', {\r\n            method: 'POST',\r\n            body: formData\r\n        })\r\n            .then(response => response.json())\r\n            .then(result => {\r\n                setImgUrl(process.env.API_HOST + result[0].url)\r\n            })\r\n    }\r\n\r\n    // func onSubmit used because useForm not working with some fields\r\n    async function onSubmit(formData) {\r\n        try {\r\n            await updateProduct(formData);\r\n        } catch (err) {\r\n            setLoading(false);\r\n            error(err.message || err.toString());\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div select=\"/cms/product\">\r\n            <Head>\r\n                <title>Thông tin sản phẩm</title>\r\n            </Head>\r\n            <form >\r\n                <MyCard>\r\n                    <MyCardHeader title=\"Thông tin cơ bản\" small={true} />\r\n                    <MyCardContent>\r\n\r\n                        <Grid container spacing={6}>\r\n                            <Grid item xs={12} sm={12} md={6}>\r\n                                <TextField\r\n                                    id=\"name\"\r\n                                    name=\"name\"\r\n                                    variant=\"outlined\"\r\n                                    size=\"small\"\r\n                                    label=\"Tên sản phẩm\"\r\n                                    placeholder=\"Sản phẩm A\"\r\n                                    InputLabelProps={{\r\n                                        shrink: true,\r\n                                    }}\r\n                                    style={{ width: \"100%\" }}\r\n                                    onChange={(e) => setName(e.target.value)}\r\n                                />\r\n                            </Grid>\r\n                            <Grid item xs={12} sm={12} md={3}>\r\n                                <TextField\r\n                                    id=\"price\"\r\n                                    name=\"price\"\r\n                                    variant=\"outlined\"\r\n                                    size=\"small\"\r\n                                    label=\"Giá tiền\"\r\n                                    placeholder=\"100000\"\r\n                                    InputLabelProps={{\r\n                                        shrink: true,\r\n                                    }}\r\n                                    style={{ width: \"100%\" }}\r\n                                    onChange={(e) => setPrice(e.target.value)}\r\n                                />\r\n                            </Grid>\r\n                            <Grid item xs={12} sm={12} md={12}>\r\n                                <input type=\"file\" id=\"actual-btn\" onChange={(e) => uploadImage(e.target.files[0])} hidden />\r\n                                <label style={{\r\n                                    backgroundColor: \"indigo\",\r\n                                    color: \"white\",\r\n                                    padding: \"0.5rem\",\r\n                                    borderRadius: \"0.3rem\",\r\n                                    cursor: \"pointer\"\r\n                                }} for=\"actual-btn\">Choose File</label>\r\n                            </Grid>\r\n                            {imgUrl ? <Grid style={{ padding: \"0\", marginLeft: \"25px\" }} item xs={12} sm={12} md={12}>\r\n                                <Image src={imgUrl} height={100} width={100} />\r\n                            </Grid> : null}\r\n                        </Grid>\r\n                    </MyCardContent>\r\n                </MyCard>\r\n                <MyCard>\r\n                    <MyCardActions>\r\n                        <Grid container spacing={1} xs={12}>\r\n                            <Grid item>\r\n                                <Link href=\"/cms/product\">\r\n                                    <Button variant=\"contained\">\r\n                                        Trở về\r\n                                    </Button>\r\n                                </Link>\r\n                            </Grid>\r\n                            <Grid item>\r\n                                <Button\r\n                                    variant=\"contained\"\r\n                                    color=\"primary\"\r\n                                    onClick={() => createProduct()}\r\n                                >\r\n                                    {loading && <CircularProgress size={20} />}\r\n                                    Tạo mới sản phẩm\r\n                                </Button>\r\n                            </Grid>\r\n                        </Grid>\r\n                    </MyCardActions>\r\n                </MyCard>\r\n            </form>\r\n        </div>\r\n    )\r\n};\r\n\r\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"var _jsxFileName = \"D:\\\\Learning\\\\Learning\\\\HKI_NamTu\\\\MoHinhHoaPhanMem\\\\KTXSHOP\\\\Source\\\\FE-KTXSHOP-SELLER\\\\pages\\\\login\\\\index.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { parseBody } from \"next/dist/next-server/server/api-utils\";\nimport { APIStatus } from \"../../lib/common\";\nimport Head from \"next/head\";\nimport { Box, Button, Paper, TextField } from \"@material-ui/core\";\nimport styles from \"./login.module.css\";\nimport { useContext } from \"react\";\nimport UserContext from \"../../component/my-context/my-context\";\n/*\r\nLogin page that is used on stg/uat/prd is only run from internal-hrm code repo.\r\n'Login.js' file of other repos is only used for local testing.\r\n\r\nThis file have 2 ways to use:\r\n+ GET method: display login page with login form\r\n+ POST method: receive submitted login data (username/password)\r\n*/\n\nexport async function getServerSideProps(ctx) {\n  let returnObject = {\n    props: {}\n  };\n\n  if (ctx.req && ctx.req.method === \"POST\") {\n    // read form data\n    let body = await parseBody(ctx.req, \"1kb\"); // call backend API\n\n    const response = await fetch(`${process.env.API_HOST}/core/account/v1/authentication`, {\n      method: \"POST\",\n      contentType: \"application/json\",\n      body: JSON.stringify({\n        username: body.username,\n        password: body.password,\n        type: \"EMPLOYEE\"\n      }),\n      headers: {\n        \"User-Agent\": ctx.req.headers[\"user-agent\"],\n        \"X-Forwarded-For\": ctx.req.headers[\"x-forwarded-for\"]\n      }\n    });\n    const result = await response.json(); // if OK, do set cookie & redirect page to relative target\n\n    if (result.status === APIStatus.OK) {\n      let data = result.data[0];\n      let url = body.url || \"/\";\n      let res = ctx.res;\n      res.setHeader(\"set-cookie\", `session_token=${data.bearerToken}; Path=/; HttpOnly`);\n      res.setHeader(\"location\", url);\n      res.statusCode = 302;\n      res.end();\n    }\n\n    returnObject.props.url = body.url;\n  } else {\n    returnObject.props.url = ctx.query.url || \"/\";\n  }\n\n  return returnObject;\n}\n/*\r\nA simple login page.\r\nCan customize to display more.\r\nLoginForm has basic inputs of authentication flow:\r\n+ Login label\r\n+ Username / password input\r\n+ Submit button\r\n*/\n\nexport default function LoginPage(props) {\n  return __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 5\n    }\n  }, __jsx(Head, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }\n  }, __jsx(\"title\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 9\n    }\n  }, \"\\u0110\\u0103ng nh\\u1EADp v\\xE0o h\\u1EC7 th\\u1ED1ng n\\u1ED9i b\\u1ED9\")), __jsx(Paper, {\n    className: styles.loginForm,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }\n  }, __jsx(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 9\n    }\n  }, \"\\u0110\\u0103ng nh\\u1EADp\"), __jsx(\"form\", {\n    method: \"POST\",\n    action: \"/login\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 9\n    }\n  }, __jsx(\"input\", {\n    type: \"hidden\",\n    name: \"url\",\n    value: props.url,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 11\n    }\n  }), __jsx(Box, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 11\n    }\n  }, __jsx(TextField, {\n    id: \"username\",\n    label: \"T\\xEAn t\\xE0i kho\\u1EA3n\",\n    margin: \"normal\",\n    InputLabelProps: {\n      shrink: true\n    },\n    style: {\n      margin: 12,\n      width: 280\n    },\n    autoFocus: true,\n    name: \"username\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 13\n    }\n  })), __jsx(Box, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 11\n    }\n  }, __jsx(TextField, {\n    id: \"password\",\n    label: \"M\\u1EADt kh\\u1EA9u\",\n    margin: \"normal\",\n    InputLabelProps: {\n      shrink: true\n    },\n    style: {\n      margin: 12,\n      width: 280\n    },\n    name: \"password\",\n    type: \"password\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 13\n    }\n  })), __jsx(Box, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 11\n    }\n  }, __jsx(Button, {\n    type: \"submit\",\n    variant: \"contained\",\n    color: \"primary\",\n    style: {\n      margin: 8\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 13\n    }\n  }, \"\\u0110\\u0103ng nh\\u1EADp\")))));\n}","map":{"version":3,"sources":["D:/Learning/Learning/HKI_NamTu/MoHinhHoaPhanMem/KTXSHOP/Source/FE-KTXSHOP-SELLER/pages/login/index.js"],"names":["parseBody","APIStatus","Head","Box","Button","Paper","TextField","styles","useContext","UserContext","getServerSideProps","ctx","returnObject","props","req","method","body","response","fetch","process","env","API_HOST","contentType","JSON","stringify","username","password","type","headers","result","json","status","OK","data","url","res","setHeader","bearerToken","statusCode","end","query","LoginPage","loginForm","shrink","margin","width"],"mappings":"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","sourcesContent":["import { parseBody } from \"next/dist/next-server/server/api-utils\";\r\nimport { APIStatus } from \"../../lib/common\";\r\nimport Head from \"next/head\";\r\nimport { Box, Button, Paper, TextField } from \"@material-ui/core\";\r\nimport styles from \"./login.module.css\";\r\nimport { useContext } from \"react\";\r\nimport UserContext from \"../../component/my-context/my-context\";\r\n\r\n/*\r\nLogin page that is used on stg/uat/prd is only run from internal-hrm code repo.\r\n'Login.js' file of other repos is only used for local testing.\r\n\r\nThis file have 2 ways to use:\r\n+ GET method: display login page with login form\r\n+ POST method: receive submitted login data (username/password)\r\n*/\r\nexport async function getServerSideProps(ctx) {\r\n  let returnObject = { props: {} };\r\n  \r\n  if (ctx.req && ctx.req.method === \"POST\") {\r\n    // read form data\r\n    let body = await parseBody(ctx.req, \"1kb\");\r\n\r\n    // call backend API\r\n    const response = await fetch(\r\n      `${process.env.API_HOST}/core/account/v1/authentication`,\r\n      {\r\n        method: \"POST\",\r\n        contentType: \"application/json\",\r\n        body: JSON.stringify({\r\n          username: body.username,\r\n          password: body.password,\r\n          type: \"EMPLOYEE\",\r\n        }),\r\n        headers: {\r\n          \"User-Agent\": ctx.req.headers[\"user-agent\"],\r\n          \"X-Forwarded-For\": ctx.req.headers[\"x-forwarded-for\"],\r\n        },\r\n      }\r\n    );\r\n    const result = await response.json();\r\n\r\n    // if OK, do set cookie & redirect page to relative target\r\n    if (result.status === APIStatus.OK) {\r\n      let data = result.data[0];\r\n      let url = body.url || \"/\";\r\n      let res = ctx.res;\r\n      res.setHeader(\r\n        \"set-cookie\",\r\n        `session_token=${data.bearerToken}; Path=/; HttpOnly`\r\n      );\r\n      res.setHeader(\"location\", url);\r\n      res.statusCode = 302;\r\n      res.end();\r\n    }\r\n\r\n    returnObject.props.url = body.url;\r\n  } else {\r\n    returnObject.props.url = ctx.query.url || \"/\";\r\n  }\r\n\r\n  return returnObject;\r\n}\r\n\r\n/*\r\nA simple login page.\r\nCan customize to display more.\r\nLoginForm has basic inputs of authentication flow:\r\n+ Login label\r\n+ Username / password input\r\n+ Submit button\r\n*/\r\nexport default function LoginPage(props) {\r\n  return (\r\n    <div>\r\n      <Head>\r\n        <title>Đăng nhập vào hệ thống nội bộ</title>\r\n      </Head>\r\n      <Paper className={styles.loginForm}>\r\n        <h1>Đăng nhập</h1>\r\n        <form method=\"POST\" action=\"/login\">\r\n          <input type=\"hidden\" name=\"url\" value={props.url} />\r\n          <Box>\r\n            <TextField\r\n              id=\"username\"\r\n              label=\"Tên tài khoản\"\r\n              margin=\"normal\"\r\n              InputLabelProps={{\r\n                shrink: true,\r\n              }}\r\n              style={{ margin: 12, width: 280 }}\r\n              autoFocus={true}\r\n              name=\"username\"\r\n            />\r\n          </Box>\r\n          <Box>\r\n            <TextField\r\n              id=\"password\"\r\n              label=\"Mật khẩu\"\r\n              margin=\"normal\"\r\n              InputLabelProps={{\r\n                shrink: true,\r\n              }}\r\n              style={{ margin: 12, width: 280 }}\r\n              name=\"password\"\r\n              type=\"password\"\r\n            />\r\n          </Box>\r\n          <Box>\r\n            <Button\r\n              type=\"submit\"\r\n              variant=\"contained\"\r\n              color=\"primary\"\r\n              style={{ margin: 8 }}\r\n            >\r\n              Đăng nhập\r\n            </Button>\r\n          </Box>\r\n        </form>\r\n      </Paper>\r\n    </div>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"import axios, { AxiosError, AxiosResponse } from \"axios\";\nimport queryString from \"query-string\";\nvar baseURL = process.env.URL_MY_API;\nvar axiosMy = axios.create({\n  baseURL: \"http://localhost:1337/api/\",\n  headers: {\n    \"content-type\": \"application/json\",\n    Accept: \"application/json\" // Authorization: token,\n\n  },\n  paramsSerializer: function paramsSerializer(params) {\n    return queryString.stringify(params);\n  }\n});\naxiosMy.interceptors.response.use(function (res) {\n  if (res.data.result === 0) {\n    console.log(\"Data empty\");\n  }\n\n  return res;\n}, function (err) {\n  var _err$response;\n\n  if (((_err$response = err.response) === null || _err$response === void 0 ? void 0 : _err$response.status) === 401) {\n    console.log(\"Error 401\");\n  }\n\n  throw err;\n});\nexport default axiosMy;","map":{"version":3,"sources":["D:/Learning/Learning/HKI_NamTu/MoHinhHoaPhanMem/KTXSHOP/Source/FE-KTXSHOP-SELLER/services/axiosMy.js"],"names":["axios","AxiosError","AxiosResponse","queryString","baseURL","process","env","URL_MY_API","axiosMy","create","headers","Accept","paramsSerializer","params","stringify","interceptors","response","use","res","data","result","console","log","err","status"],"mappings":"AAAA,OAAOA,KAAP,IAAgBC,UAAhB,EAA4BC,aAA5B,QAAiD,OAAjD;AACA,OAAOC,WAAP,MAAwB,cAAxB;AACA,IAAMC,OAAO,GAAGC,OAAO,CAACC,GAAR,CAAYC,UAA5B;AAEA,IAAMC,OAAO,GAAGR,KAAK,CAACS,MAAN,CAAa;AAC3BL,EAAAA,OAAO,EAAE,4BADkB;AAE3BM,EAAAA,OAAO,EAAE;AACP,oBAAgB,kBADT;AAEPC,IAAAA,MAAM,EAAE,kBAFD,CAGP;;AAHO,GAFkB;AAO3BC,EAAAA,gBAAgB,EAAE,0BAACC,MAAD;AAAA,WAAYV,WAAW,CAACW,SAAZ,CAAsBD,MAAtB,CAAZ;AAAA;AAPS,CAAb,CAAhB;AAUAL,OAAO,CAACO,YAAR,CAAqBC,QAArB,CAA8BC,GAA9B,CACE,UAACC,GAAD,EAAS;AACP,MAAIA,GAAG,CAACC,IAAJ,CAASC,MAAT,KAAoB,CAAxB,EAA2B;AACzBC,IAAAA,OAAO,CAACC,GAAR,CAAY,YAAZ;AACD;;AACD,SAAOJ,GAAP;AACD,CANH,EAOE,UAACK,GAAD,EAAS;AAAA;;AACP,MAAI,kBAAAA,GAAG,CAACP,QAAJ,gEAAcQ,MAAd,MAAyB,GAA7B,EAAkC;AAChCH,IAAAA,OAAO,CAACC,GAAR,CAAY,WAAZ;AACD;;AACD,QAAMC,GAAN;AACD,CAZH;AAeA,eAAef,OAAf","sourcesContent":["import axios, { AxiosError, AxiosResponse } from \"axios\";\r\nimport queryString from \"query-string\";\r\nconst baseURL = process.env.URL_MY_API;\r\n\r\nconst axiosMy = axios.create({\r\n  baseURL: \"http://localhost:1337/api/\",\r\n  headers: {\r\n    \"content-type\": \"application/json\",\r\n    Accept: \"application/json\",\r\n    // Authorization: token,\r\n  },\r\n  paramsSerializer: (params) => queryString.stringify(params),\r\n});\r\n\r\naxiosMy.interceptors.response.use(\r\n  (res) => {\r\n    if (res.data.result === 0) {\r\n      console.log(\"Data empty\");\r\n    }\r\n    return res;\r\n  },\r\n  (err) => {\r\n    if (err.response?.status === 401) {\r\n      console.log(\"Error 401\");\r\n    }\r\n    throw err;\r\n  }\r\n);\r\n\r\nexport default axiosMy;\r\n"]},"metadata":{},"sourceType":"module"}
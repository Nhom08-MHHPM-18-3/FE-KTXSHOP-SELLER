{"ast":null,"code":"var _jsxFileName = \"D:\\\\Learning\\\\Learning\\\\HKI_NamTu\\\\MoHinhHoaPhanMem\\\\KTXSHOP\\\\Source\\\\FE-KTXSHOP-SELLER\\\\pages\\\\cms\\\\product\\\\edit.js\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport Head from \"next/head\";\nimport React, { useState } from \"react\";\nimport { useForm } from \"react-hook-form\";\nimport Image from 'next/image';\nimport { Box, Button, CircularProgress, FormGroup, Grid, Link, Paper, TextField } from \"@material-ui/core\";\nimport { doWithLoggedInUser, renderWithLoggedInUser } from \"../../../lib/login\";\nimport { MyCard, MyCardContent, MyCardHeader } from \"../../../component/my-card/my-card\";\nimport styles from \"./product.module.css\";\nexport async function getServerSideProps(ctx) {\n  return await doWithLoggedInUser(ctx, ctx => {\n    return loadIngredientData(ctx);\n  });\n}\nexport async function loadIngredientData(ctx) {\n  let data = {\n    props: {\n      data: []\n    }\n  };\n  let id = ctx.query.productId;\n  await fetch(process.env.API_HOST + '/api/products/' + id).then(response => response.json()).then(res => {\n    data.props.data.push(_objectSpread(_objectSpread({}, res.data.attributes), {}, {\n      id: res.data.id\n    }));\n  });\n  return data;\n}\nexport default function EditPage(props) {\n  return renderWithLoggedInUser(props, render);\n}\n\nfunction render(props) {\n  var _errors$name;\n\n  // let _client = getIngredientClient();\n  const {\n    0: loading,\n    1: setLoading\n  } = useState(false);\n  const data = props.data[0];\n\n  if (props.status && props.status !== \"OK\") {\n    return __jsx(AppCMS, {\n      select: \"/cms/ingredient\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 7\n      }\n    }, __jsx(Head, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }\n    }, __jsx(\"title\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 11\n      }\n    }, \"Chi ti\\u1EBFt s\\u1EA3n ph\\u1EA9m\")), __jsx(MyCard, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }\n    }, __jsx(MyCardHeader, {\n      title: \"Chi ti\\u1EBFt s\\u1EA3n ph\\u1EA9m\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 11\n      }\n    }), __jsx(Box, {\n      component: Paper,\n      display: \"block\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 11\n      }\n    }, __jsx(FormGroup, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 13\n      }\n    }, __jsx(\"form\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 15\n      }\n    }, __jsx(Grid, {\n      container: true,\n      spacing: 3,\n      direction: \"row\",\n      justify: \"space-between\",\n      alignItems: \"flex-start\",\n      className: styles.contentPadding,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 17\n      }\n    }, __jsx(Grid, {\n      item: true,\n      xs: 12,\n      md: 12,\n      sm: 12,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 19\n      }\n    }, __jsx(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 21\n      }\n    }, props.message)))))), __jsx(Box, {\n      component: Paper,\n      display: \"block\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 11\n      }\n    })));\n  }\n\n  const {\n    register,\n    handleSubmit,\n    errors,\n    setValue,\n    reset\n  } = useForm({\n    defaultValues: data,\n    mode: \"onChange\"\n  });\n\n  async function updateIngredient(formData) {\n    let data = {\n      props: {}\n    };\n    setLoading(true);\n    data.props = await _client.updateIngredient(formData);\n    setLoading(false);\n\n    if (data.props.status === \"OK\") {\n      success(\"Cập nhật thông tin sản phẩm thành công\");\n      reset({});\n    } else {\n      error(data.props.message || \"Thao tác không thành công, vui lòng thử lại sau\");\n    }\n  } // func onSubmit used because useForm not working with some fields\n\n\n  async function onSubmit(formData) {\n    try {\n      formData.name = formData === null || formData === void 0 ? void 0 : formData.name.trim().replace(/\\s+/g, \" \");\n      formData.code = data.code;\n      await updateIngredient(formData);\n    } catch (err) {\n      setLoading(false);\n      error(err.message || err.toString());\n    }\n  }\n\n  return __jsx(\"div\", {\n    select: \"/cms/ingredient\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 5\n    }\n  }, __jsx(Head, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 7\n    }\n  }, __jsx(\"title\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 9\n    }\n  }, \"C\\u1EADp nh\\u1EADt s\\u1EA3n ph\\u1EA9m\")), __jsx(MyCard, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 7\n    }\n  }, __jsx(MyCardHeader, {\n    title: \"sản phẩm #\" + data.id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 9\n    }\n  }), __jsx(FormGroup, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 9\n    }\n  }, __jsx(MyCardContent, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 11\n    }\n  }, __jsx(\"form\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 13\n    }\n  }, __jsx(Grid, {\n    container: true,\n    item: true,\n    xs: 12,\n    md: 6,\n    sm: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 15\n    }\n  }, __jsx(Grid, {\n    style: {\n      margin: \"20px\"\n    },\n    item: true,\n    xs: 12,\n    md: 12,\n    sm: 6,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 17\n    }\n  }, __jsx(Image, {\n    src: data.imageUrl,\n    height: 120,\n    width: 120,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 19\n    }\n  })), __jsx(Grid, {\n    item: true,\n    xs: 12,\n    md: 12,\n    sm: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 17\n    }\n  }, __jsx(TextField, {\n    id: \"name\",\n    name: \"name\",\n    label: \"T\\xEAn s\\u1EA3n ph\\u1EA9m\",\n    placeholder: \"\",\n    helperText: (_errors$name = errors.name) === null || _errors$name === void 0 ? void 0 : _errors$name.message,\n    margin: \"normal\",\n    variant: \"outlined\",\n    size: \"small\",\n    InputLabelProps: {\n      shrink: true\n    },\n    style: {\n      margin: 12,\n      width: \"calc(100% - 24px)\"\n    },\n    error: errors.name ? true : false,\n    required: true,\n    inputRef: register({\n      required: \"Vui lòng nhập tên sản phẩm\",\n      maxLength: {\n        value: 250,\n        message: \"Tên sản phẩm có độ dài tối đa 250 kí tự\"\n      },\n      minLength: {\n        value: 1,\n        message: \"Tên sản phẩm có độ dài tối thiểu 1 kí tự\"\n      },\n      pattern: {\n        value: /^(?!.*[ ]{2})/,\n        message: \"Tên không hợp lệ (không được dư khoảng trắng).\"\n      }\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 19\n    }\n  })), __jsx(Grid, {\n    item: true,\n    xs: 12,\n    md: 12,\n    sm: 6,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 157,\n      columnNumber: 17\n    }\n  }, __jsx(TextField, {\n    id: \"price\",\n    name: \"price\",\n    label: \"Gi\\xE1\",\n    placeholder: \"\",\n    variant: \"outlined\",\n    size: \"small\",\n    margin: \"normal\",\n    multiline: true,\n    InputLabelProps: {\n      shrink: true\n    },\n    style: {\n      margin: 12,\n      width: \"calc(100% - 24px)\"\n    },\n    inputRef: register,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 158,\n      columnNumber: 19\n    }\n  })), __jsx(Grid, {\n    item: true,\n    xs: 12,\n    md: 12,\n    sm: 6,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 174,\n      columnNumber: 17\n    }\n  })), __jsx(Grid, {\n    item: true,\n    xs: 12,\n    md: 12,\n    sm: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 176,\n      columnNumber: 15\n    }\n  }, __jsx(Link, {\n    href: \"/cms/product\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 177,\n      columnNumber: 17\n    }\n  }, __jsx(Button, {\n    variant: \"contained\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 178,\n      columnNumber: 19\n    }\n  }, \"Tr\\u1EDF l\\u1EA1i\"))))))));\n}","map":{"version":3,"sources":["D:/Learning/Learning/HKI_NamTu/MoHinhHoaPhanMem/KTXSHOP/Source/FE-KTXSHOP-SELLER/pages/cms/product/edit.js"],"names":["Head","React","useState","useForm","Image","Box","Button","CircularProgress","FormGroup","Grid","Link","Paper","TextField","doWithLoggedInUser","renderWithLoggedInUser","MyCard","MyCardContent","MyCardHeader","styles","getServerSideProps","ctx","loadIngredientData","data","props","id","query","productId","fetch","process","env","API_HOST","then","response","json","res","push","attributes","EditPage","render","loading","setLoading","status","contentPadding","message","register","handleSubmit","errors","setValue","reset","defaultValues","mode","updateIngredient","formData","_client","success","error","onSubmit","name","trim","replace","code","err","toString","margin","imageUrl","shrink","width","required","maxLength","value","minLength","pattern"],"mappings":"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","sourcesContent":["import Head from \"next/head\";\r\nimport React, { useState } from \"react\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport Image from 'next/image'\r\nimport {\r\n  Box, Button, CircularProgress,\r\n  FormGroup, Grid, Link, Paper, TextField\r\n} from \"@material-ui/core\";\r\nimport {\r\n  doWithLoggedInUser,\r\n  renderWithLoggedInUser\r\n} from \"../../../lib/login\";\r\nimport { MyCard, MyCardContent, MyCardHeader } from \"../../../component/my-card/my-card\";\r\nimport styles from \"./product.module.css\";\r\n\r\nexport async function getServerSideProps(ctx) {\r\n  return await doWithLoggedInUser(ctx, (ctx) => {\r\n    return loadIngredientData(ctx);\r\n  });\r\n}\r\n\r\nexport async function loadIngredientData(ctx) {\r\n  let data = {\r\n    props: {\r\n      data: [],\r\n    }\r\n  };\r\n  let id = ctx.query.productId;\r\n  await fetch(process.env.API_HOST + '/api/products/' + id)\r\n    .then(response => response.json())\r\n    .then(res => {\r\n      data.props.data.push({ ...res.data.attributes, id: res.data.id })\r\n    });\r\n  return data;\r\n}\r\n\r\nexport default function EditPage(props) {\r\n  return renderWithLoggedInUser(props, render);\r\n}\r\n\r\n\r\nfunction render(props) {\r\n  // let _client = getIngredientClient();\r\n  const [loading, setLoading] = useState(false);\r\n  const data = props.data[0]\r\n  if (props.status && props.status !== \"OK\") {\r\n    return (\r\n      <AppCMS select=\"/cms/ingredient\">\r\n        <Head>\r\n          <title>Chi tiết sản phẩm</title>\r\n        </Head>\r\n        <MyCard>\r\n          <MyCardHeader title=\"Chi tiết sản phẩm\" />\r\n          <Box component={Paper} display=\"block\">\r\n            <FormGroup>\r\n              <form>\r\n                <Grid\r\n                  container\r\n                  spacing={3}\r\n                  direction=\"row\"\r\n                  justify=\"space-between\"\r\n                  alignItems=\"flex-start\"\r\n                  className={styles.contentPadding}\r\n                >\r\n                  <Grid item xs={12} md={12} sm={12}>\r\n                    <span>{props.message}</span>\r\n                  </Grid>\r\n                </Grid>\r\n              </form>\r\n            </FormGroup>\r\n          </Box>\r\n          <Box component={Paper} display=\"block\"></Box>\r\n        </MyCard>\r\n      </AppCMS>\r\n    );\r\n  }\r\n\r\n  const { register, handleSubmit, errors, setValue, reset } = useForm({\r\n    defaultValues: data,\r\n    mode: \"onChange\",\r\n  });\r\n\r\n  async function updateIngredient(formData) {\r\n    let data = { props: {} };\r\n    setLoading(true);\r\n    data.props = await _client.updateIngredient(formData);\r\n    setLoading(false);\r\n    if (data.props.status === \"OK\") {\r\n      success(\"Cập nhật thông tin sản phẩm thành công\");\r\n      reset({})\r\n    } else {\r\n      error(\r\n        data.props.message || \"Thao tác không thành công, vui lòng thử lại sau\"\r\n      );\r\n    }\r\n  }\r\n\r\n  // func onSubmit used because useForm not working with some fields\r\n  async function onSubmit(formData) {\r\n    try {\r\n      formData.name = formData?.name.trim().replace(/\\s+/g, \" \");\r\n      formData.code = data.code\r\n      await updateIngredient(formData);\r\n    } catch (err) {\r\n      setLoading(false);\r\n      error(err.message || err.toString());\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div select=\"/cms/ingredient\">\r\n      <Head>\r\n        <title>Cập nhật sản phẩm</title>\r\n      </Head>\r\n      <MyCard>\r\n        <MyCardHeader title={\"sản phẩm #\" + data.id} />\r\n        <FormGroup>\r\n          <MyCardContent>\r\n            <form>\r\n              <Grid container item xs={12} md={6} sm={12}>\r\n                <Grid style={{ margin: \"20px\" }} item xs={12} md={12} sm={6}>\r\n                  <Image src={data.imageUrl} height={120} width={120} />\r\n                </Grid>\r\n                <Grid item xs={12} md={12} sm={12}>\r\n                  <TextField\r\n                    id=\"name\"\r\n                    name=\"name\"\r\n                    label=\"Tên sản phẩm\"\r\n                    placeholder=\"\"\r\n                    helperText={errors.name?.message}\r\n                    margin=\"normal\"\r\n                    variant=\"outlined\"\r\n                    size=\"small\"\r\n                    InputLabelProps={{\r\n                      shrink: true,\r\n                    }}\r\n                    style={{ margin: 12, width: \"calc(100% - 24px)\" }}\r\n                    error={errors.name ? true : false}\r\n                    required\r\n                    inputRef={register({\r\n                      required: \"Vui lòng nhập tên sản phẩm\",\r\n                      maxLength: {\r\n                        value: 250,\r\n                        message: \"Tên sản phẩm có độ dài tối đa 250 kí tự\",\r\n                      },\r\n                      minLength: {\r\n                        value: 1,\r\n                        message: \"Tên sản phẩm có độ dài tối thiểu 1 kí tự\",\r\n                      },\r\n                      pattern: {\r\n                        value: /^(?!.*[ ]{2})/,\r\n                        message: \"Tên không hợp lệ (không được dư khoảng trắng).\"\r\n                      },\r\n                    })}\r\n                  />\r\n                </Grid>\r\n                <Grid item xs={12} md={12} sm={6}>\r\n                  <TextField\r\n                    id=\"price\"\r\n                    name=\"price\"\r\n                    label=\"Giá\"\r\n                    placeholder=\"\"\r\n                    variant=\"outlined\"\r\n                    size=\"small\"\r\n                    margin=\"normal\"\r\n                    multiline\r\n                    InputLabelProps={{\r\n                      shrink: true,\r\n                    }}\r\n                    style={{ margin: 12, width: \"calc(100% - 24px)\" }}\r\n                    inputRef={register}\r\n                  />\r\n                </Grid>\r\n                <Grid item xs={12} md={12} sm={6} />\r\n              </Grid>\r\n              <Grid item xs={12} md={12} sm={12}>\r\n                <Link href=\"/cms/product\">\r\n                  <Button\r\n                    variant=\"contained\"\r\n                  >\r\n                    Trở lại\r\n                                    </Button>\r\n                </Link>\r\n              </Grid>\r\n            </form>\r\n          </MyCardContent>\r\n        </FormGroup>\r\n      </MyCard>\r\n    </div>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}
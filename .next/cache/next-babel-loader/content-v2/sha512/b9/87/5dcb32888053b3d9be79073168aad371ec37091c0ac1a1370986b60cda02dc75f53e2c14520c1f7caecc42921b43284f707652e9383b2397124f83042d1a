{"ast":null,"code":"import _slicedToArray from \"/home/hao/Deadline/mhhpm_18_3_final/FE-KTXSHOP-SELLER/node_modules/next/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _jsxFileName = \"/home/hao/Deadline/mhhpm_18_3_final/FE-KTXSHOP-SELLER/component/my-pagination/my-pagination.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { TableFooter, TablePagination, TableRow } from \"@material-ui/core\";\nimport { useEffect } from \"react\";\nexport default function MyTablePagination(props) {\n  _s();\n\n  var _React$useState = React.useState(props.page),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      page = _React$useState2[0],\n      setPage = _React$useState2[1];\n\n  var _React$useState3 = React.useState(props.rowsPerPage),\n      _React$useState4 = _slicedToArray(_React$useState3, 2),\n      rowsPerPage = _React$useState4[0],\n      setRowsPerPage = _React$useState4[1];\n\n  var _React$useState5 = React.useState(props.isFirstLoad),\n      _React$useState6 = _slicedToArray(_React$useState5, 2),\n      isFirstLoad = _React$useState6[0],\n      setIsFirstLoad = _React$useState6[1];\n\n  useEffect(function () {\n    setPage(props.page);\n    setRowsPerPage(props.rowsPerPage);\n\n    if (page !== 0) {\n      setIsFirstLoad(false);\n    }\n\n    if (isFirstLoad === true) {\n      setPage(0);\n      setRowsPerPage(props.rowsPerPage);\n    }\n  }, [props]);\n\n  function displayLabel(data) {\n    data.from = data.page * parseInt(rowsPerPage) + 1;\n    data.to = data.from + parseInt(rowsPerPage) - 1;\n    return __jsx(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 16\n      }\n    }, \"t\\u1EEB \", __jsx(\"b\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 25\n      }\n    }, data.from), \" \\u0111\\u1EBFn \", __jsx(\"b\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 48\n      }\n    }, Math.min(data.to, data.count)), \" trong \", __jsx(\"b\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 93\n      }\n    }, data.count), \" \", props.labelUnit);\n  }\n\n  function handleChangePage(event, newPage) {\n    setPage(newPage);\n\n    if (typeof props.onChangePage == 'function') {\n      props.onChangePage(event, newPage, rowsPerPage);\n    }\n  }\n\n  function handleChangeRowsPerPage(event) {\n    var rpp = parseInt(event.target.value, 10);\n    setPage(0);\n    setRowsPerPage(rpp);\n\n    if (typeof props.onChangePage == 'function') {\n      props.onChangePage(event, 0, rpp);\n    }\n  }\n\n  return __jsx(TableFooter, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 12\n    }\n  }, __jsx(TableRow, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 9\n    }\n  }, __jsx(TablePagination, {\n    rowsPerPageOptions: [20, 50, 100],\n    colSpan: 100,\n    labelRowsPerPage: \"Hi\\u1EC3n th\\u1ECB m\\u1ED7i trang\",\n    labelDisplayedRows: displayLabel,\n    count: props.count,\n    rowsPerPage: rowsPerPage,\n    page: page,\n    onChangePage: handleChangePage,\n    onChangeRowsPerPage: handleChangeRowsPerPage,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 13\n    }\n  })));\n}\n\n_s(MyTablePagination, \"eUX1SZyjiC7t1TeMWkMwtHGMHwQ=\");\n\n_c = MyTablePagination;\n\nvar _c;\n\n$RefreshReg$(_c, \"MyTablePagination\");","map":{"version":3,"sources":["/home/hao/Deadline/mhhpm_18_3_final/FE-KTXSHOP-SELLER/component/my-pagination/my-pagination.js"],"names":["TableFooter","TablePagination","TableRow","useEffect","MyTablePagination","props","React","useState","page","setPage","rowsPerPage","setRowsPerPage","isFirstLoad","setIsFirstLoad","displayLabel","data","from","parseInt","to","Math","min","count","labelUnit","handleChangePage","event","newPage","onChangePage","handleChangeRowsPerPage","rpp","target","value"],"mappings":"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","sourcesContent":["import { TableFooter, TablePagination, TableRow } from \"@material-ui/core\";\nimport { useEffect } from \"react\";\n\nexport default function MyTablePagination(props) {\n\n    let [page, setPage] = React.useState(props.page)\n    let [rowsPerPage, setRowsPerPage] = React.useState(props.rowsPerPage)\n    let [isFirstLoad, setIsFirstLoad] = React.useState(props.isFirstLoad)\n\n    useEffect(() => {\n        setPage(props.page)\n        setRowsPerPage(props.rowsPerPage)\n        if (page !== 0) {\n            setIsFirstLoad(false)\n        }\n        if (isFirstLoad === true) {\n            setPage(0)\n            setRowsPerPage(props.rowsPerPage)\n        }\n    }, [props])\n\n    function displayLabel(data) {\n        data.from = data.page * parseInt(rowsPerPage) + 1\n        data.to = data.from + parseInt(rowsPerPage) - 1\n        return <span>từ <b>{data.from}</b> đến <b>{Math.min(data.to, data.count)}</b> trong <b>{data.count}</b> {props.labelUnit}</span>\n    }\n\n    function handleChangePage(event, newPage) {\n        setPage(newPage)\n        if (typeof props.onChangePage == 'function') {\n            props.onChangePage(event, newPage, rowsPerPage)\n        }\n    }\n\n    function handleChangeRowsPerPage(event) {\n        let rpp = parseInt(event.target.value, 10)\n        setPage(0)\n        setRowsPerPage(rpp)\n        if (typeof props.onChangePage == 'function') {\n            props.onChangePage(event, 0, rpp)\n        }\n    }\n\n    return <TableFooter>\n        <TableRow>\n            <TablePagination\n                rowsPerPageOptions={[20, 50, 100]}\n                colSpan={100}\n                labelRowsPerPage=\"Hiển thị mỗi trang\"\n                labelDisplayedRows={displayLabel}\n                count={props.count}\n                rowsPerPage={rowsPerPage}\n                page={page}\n                onChangePage={handleChangePage}\n                onChangeRowsPerPage={handleChangeRowsPerPage}\n            ></TablePagination>\n        </TableRow>\n    </TableFooter>\n\n}"]},"metadata":{},"sourceType":"module"}
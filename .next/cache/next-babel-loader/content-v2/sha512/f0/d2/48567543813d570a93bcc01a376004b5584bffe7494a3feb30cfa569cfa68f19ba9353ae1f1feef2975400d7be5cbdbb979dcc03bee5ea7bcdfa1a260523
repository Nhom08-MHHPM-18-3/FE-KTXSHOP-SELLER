{"ast":null,"code":"var _jsxFileName = \"D:\\\\Learning\\\\Learning\\\\HKI_NamTu\\\\MoHinhHoaPhanMem\\\\KTXSHOP\\\\Source\\\\FE-KTXSHOP-SELLER\\\\component\\\\editor\\\\rich-text-field\\\\index.js\",\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\nimport { createStyles } from \"@material-ui/core\";\nimport { ContentState, convertFromHTML, EditorState } from \"draft-js\";\nimport { stateToHTML } from \"draft-js-export-html\";\nimport dynamic from \"next/dynamic\";\nimport React, { useEffect, useState } from 'react';\nimport LabelBox from '../label-box';\nvar Editor = dynamic(_c = function _c() {\n  return import('react-draft-wysiwyg').then(function (mod) {\n    return mod.Editor;\n  });\n}, {\n  ssr: false,\n  loadableGenerated: {\n    webpack: function webpack() {\n      return [require.resolveWeak('react-draft-wysiwyg')];\n    },\n    modules: ['react-draft-wysiwyg']\n  }\n});\n_c2 = Editor;\nvar defaultOptions = ['inline', 'list', 'textAlign', 'colorPicker'];\n\nvar defaultOnValueChange = function defaultOnValueChange() {\n  var value = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : \"\";\n};\n\nvar defaultSetValue = function defaultSetValue() {\n  var name = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : '';\n  var value = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : '';\n};\n\nvar styles = createStyles({\n  editor: {\n    padding: \"0 8px\",\n    minHeight: \"6rem\"\n  }\n});\n/**\r\n * @callback getValueType\r\n * @param {string} name - name of field\r\n * @callback setValueType\r\n * @param {string} name - name of field\r\n * @param {*} value - value to set to form\r\n * @returns {void}\r\n */\n\n/**\r\n * @description This is a rich text editor component.\r\n * @param {[string]} options array of toolbar options\r\n * @param {string} label field label\r\n * @param {string} name name of form value\r\n * @param {setValueType} setValue function to get field value.\r\n * @param {getValueType} getValue function to get field value.\r\n * @example How to use `import RichTextField from \"@thuocsi/nextjs-components/editor/rich-text-field/index\";import \"react-draft-wysiwyg/dist/react-draft-wysiwyg.css\";`\r\n */\n\nexport default function RichTextField(_ref) {\n  _s();\n\n  var _ref$options = _ref.options,\n      options = _ref$options === void 0 ? defaultOptions : _ref$options,\n      _ref$onValueChange = _ref.onValueChange,\n      onValueChange = _ref$onValueChange === void 0 ? defaultOnValueChange : _ref$onValueChange,\n      _ref$setValue = _ref.setValue,\n      setValue = _ref$setValue === void 0 ? defaultSetValue : _ref$setValue,\n      label = _ref.label,\n      _ref$name = _ref.name,\n      name = _ref$name === void 0 ? '' : _ref$name,\n      getValue = _ref.getValue;\n\n  var _useState = useState(false),\n      focused = _useState[0],\n      setFocused = _useState[1];\n\n  var _useState2 = useState(EditorState.createEmpty()),\n      editorState = _useState2[0],\n      setEditorState = _useState2[1];\n\n  useEffect(function () {\n    var value = getValue(name);\n    var blocksFromHTML = convertFromHTML(value !== null && value !== void 0 ? value : '<p></p>');\n    var contentState = ContentState.createFromBlockArray(blocksFromHTML.contentBlocks, blocksFromHTML.entityMap);\n    setEditorState(EditorState.createWithContent(contentState));\n  }, [getValue(name)]);\n  return __jsx(LabelBox, {\n    focused: focused,\n    label: label,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 9\n    }\n  }, __jsx(Editor, {\n    editorStyle: styles.editor,\n    toolbar: {\n      options: options,\n      inline: {\n        options: ['bold', 'italic', 'underline', 'strikethrough']\n      }\n    },\n    toolbarHidden: !focused,\n    editorState: editorState,\n    onEditorStateChange: setEditorState,\n    onFocus: function onFocus() {\n      return setFocused(true);\n    },\n    onBlur: function onBlur() {\n      setFocused(false);\n      var htmlString = stateToHTML(editorState.getCurrentContent());\n      setValue(name, htmlString);\n      onValueChange(htmlString);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 13\n    }\n  }));\n}\n\n_s(RichTextField, \"IpXW8elWCrgljUqSj9EOiFy0nUs=\");\n\n_c3 = RichTextField;\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"Editor$dynamic\");\n$RefreshReg$(_c2, \"Editor\");\n$RefreshReg$(_c3, \"RichTextField\");","map":{"version":3,"sources":["D:/Learning/Learning/HKI_NamTu/MoHinhHoaPhanMem/KTXSHOP/Source/FE-KTXSHOP-SELLER/component/editor/rich-text-field/index.js"],"names":["createStyles","ContentState","convertFromHTML","EditorState","stateToHTML","dynamic","React","useEffect","useState","LabelBox","Editor","then","mod","ssr","defaultOptions","defaultOnValueChange","value","defaultSetValue","name","styles","editor","padding","minHeight","RichTextField","options","onValueChange","setValue","label","getValue","focused","setFocused","createEmpty","editorState","setEditorState","blocksFromHTML","contentState","createFromBlockArray","contentBlocks","entityMap","createWithContent","inline","htmlString","getCurrentContent"],"mappings":"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","sourcesContent":["import { createStyles } from \"@material-ui/core\";\r\nimport { ContentState, convertFromHTML, EditorState } from \"draft-js\";\r\nimport { stateToHTML } from \"draft-js-export-html\";\r\nimport dynamic from \"next/dynamic\";\r\nimport React, { useEffect, useState } from 'react';\r\nimport LabelBox from '../label-box';\r\nconst Editor = dynamic(() => import('react-draft-wysiwyg').then(mod => mod.Editor), { ssr: false });\r\n\r\nconst defaultOptions = ['inline', 'list', 'textAlign', 'colorPicker'];\r\nconst defaultOnValueChange = (value = \"\") => { };\r\nconst defaultSetValue = (name = '', value = '') => { };\r\n\r\nconst styles = createStyles({\r\n    editor: {\r\n        padding: \"0 8px\",\r\n        minHeight: \"6rem\",\r\n    }\r\n})\r\n/**\r\n * @callback getValueType\r\n * @param {string} name - name of field\r\n * @callback setValueType\r\n * @param {string} name - name of field\r\n * @param {*} value - value to set to form\r\n * @returns {void}\r\n */\r\n/**\r\n * @description This is a rich text editor component.\r\n * @param {[string]} options array of toolbar options\r\n * @param {string} label field label\r\n * @param {string} name name of form value\r\n * @param {setValueType} setValue function to get field value.\r\n * @param {getValueType} getValue function to get field value.\r\n * @example How to use `import RichTextField from \"@thuocsi/nextjs-components/editor/rich-text-field/index\";import \"react-draft-wysiwyg/dist/react-draft-wysiwyg.css\";`\r\n */\r\nexport default function RichTextField({\r\n    options = defaultOptions,\r\n    onValueChange = defaultOnValueChange,\r\n    setValue = defaultSetValue,\r\n    label,\r\n    name = '',\r\n    getValue,\r\n}) {\r\n    const [focused, setFocused] = useState(false);\r\n    const [editorState, setEditorState] = useState(EditorState.createEmpty())\r\n\r\n    useEffect(() => {\r\n        const value = getValue(name);\r\n        const blocksFromHTML = convertFromHTML(value ?? '<p></p>');\r\n        const contentState = ContentState.createFromBlockArray(\r\n            blocksFromHTML.contentBlocks,\r\n            blocksFromHTML.entityMap,\r\n        )\r\n        setEditorState(EditorState.createWithContent(contentState))\r\n\r\n    }, [getValue(name)])\r\n    return (\r\n        <LabelBox focused={focused} label={label}>\r\n            <Editor\r\n                editorStyle={styles.editor}\r\n                toolbar={{\r\n                    options,\r\n                    inline: {\r\n                        options: ['bold', 'italic', 'underline', 'strikethrough'],\r\n                    }\r\n                }}\r\n                toolbarHidden={!focused}\r\n                editorState={editorState}\r\n                onEditorStateChange={setEditorState}\r\n                onFocus={() => setFocused(true)}\r\n                onBlur={() => {\r\n                    setFocused(false);\r\n                    const htmlString = stateToHTML(editorState.getCurrentContent());\r\n                    setValue(name, htmlString);\r\n                    onValueChange(htmlString);\r\n                }}\r\n            />\r\n        </LabelBox>\r\n    )\r\n}\r\n"]},"metadata":{},"sourceType":"module"}
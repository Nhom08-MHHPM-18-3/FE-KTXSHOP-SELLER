{"ast":null,"code":"var _jsxFileName = \"D:\\\\Learning\\\\Learning\\\\HKI_NamTu\\\\MoHinhHoaPhanMem\\\\KTXSHOP\\\\Source\\\\FE-KTXSHOP-SELLER\\\\pages\\\\login\\\\index.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport Head from \"next/head\";\nimport { Box, Button, Paper, TextField } from \"@material-ui/core\";\nimport styles from \"./login.module.css\";\n/*\r\nLogin page that is used on stg/uat/prd is only run from internal-hrm code repo.\r\n'Login.js' file of other repos is only used for local testing.\r\n\r\nThis file have 2 ways to use:\r\n+ GET method: display login page with login form\r\n+ POST method: receive submitted login data (username/password)\r\n*/\n\n/*\r\nA simple login page.\r\nCan customize to display more.\r\nLoginForm has basic inputs of authentication flow:\r\n+ Login label\r\n+ Username / password input\r\n+ Submit button\r\n*/\nexport var __N_SSP = true;\nexport default function LoginPage(props) {\n  return __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 12\n    }\n  }, __jsx(Head, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 9\n    }\n  }, __jsx(\"title\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 13\n    }\n  }, \"\\u0110\\u0103ng nh\\u1EADp v\\xE0o h\\u1EC7 th\\u1ED1ng n\\u1ED9i b\\u1ED9\")), __jsx(Paper, {\n    className: styles.loginForm,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 9\n    }\n  }, __jsx(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 13\n    }\n  }, \"\\u0110\\u0103ng nh\\u1EADp\"), __jsx(\"form\", {\n    method: \"POST\",\n    action: \"/login\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 13\n    }\n  }, __jsx(\"input\", {\n    type: \"hidden\",\n    name: \"url\",\n    value: props.url,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 17\n    }\n  }), __jsx(Box, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 17\n    }\n  }, __jsx(TextField, {\n    id: \"username\",\n    label: \"T\\xEAn t\\xE0i kho\\u1EA3n\",\n    margin: \"normal\",\n    InputLabelProps: {\n      shrink: true\n    },\n    style: {\n      margin: 12,\n      width: 280\n    },\n    autoFocus: true,\n    name: \"username\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 21\n    }\n  })), __jsx(Box, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 17\n    }\n  }, __jsx(TextField, {\n    id: \"password\",\n    label: \"M\\u1EADt kh\\u1EA9u\",\n    margin: \"normal\",\n    InputLabelProps: {\n      shrink: true\n    },\n    style: {\n      margin: 12,\n      width: 280\n    },\n    name: \"password\",\n    type: \"password\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 21\n    }\n  })), __jsx(Box, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 17\n    }\n  }, __jsx(Button, {\n    type: \"submit\",\n    variant: \"contained\",\n    color: \"primary\",\n    style: {\n      margin: 8\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 21\n    }\n  }, \"\\u0110\\u0103ng nh\\u1EADp\")))));\n}\n_c = LoginPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"LoginPage\");","map":{"version":3,"sources":["D:/Learning/Learning/HKI_NamTu/MoHinhHoaPhanMem/KTXSHOP/Source/FE-KTXSHOP-SELLER/pages/login/index.js"],"names":["Head","Box","Button","Paper","TextField","styles","LoginPage","props","loginForm","url","shrink","margin","width"],"mappings":";;;AAEA,OAAOA,IAAP,MAAiB,WAAjB;AACA,SAASC,GAAT,EAAcC,MAAd,EAAsBC,KAAtB,EAA6BC,SAA7B,QAA8C,mBAA9C;AACA,OAAOC,MAAP,MAAmB,oBAAnB;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AA2CA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,eAAe,SAASC,SAAT,CAAmBC,KAAnB,EAA0B;AACrC,SAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACH,MAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2EADJ,CADG,EAIH,MAAC,KAAD;AAAO,IAAA,SAAS,EAAEF,MAAM,CAACG,SAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gCADJ,EAEI;AAAM,IAAA,MAAM,EAAC,MAAb;AAAoB,IAAA,MAAM,EAAC,QAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAO,IAAA,IAAI,EAAC,QAAZ;AAAqB,IAAA,IAAI,EAAC,KAA1B;AAAgC,IAAA,KAAK,EAAED,KAAK,CAACE,GAA7C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,EAEI,MAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,MAAC,SAAD;AACI,IAAA,EAAE,EAAC,UADP;AAEI,IAAA,KAAK,EAAC,0BAFV;AAGI,IAAA,MAAM,EAAC,QAHX;AAII,IAAA,eAAe,EAAE;AACbC,MAAAA,MAAM,EAAE;AADK,KAJrB;AAOI,IAAA,KAAK,EAAE;AAAEC,MAAAA,MAAM,EAAE,EAAV;AAAcC,MAAAA,KAAK,EAAE;AAArB,KAPX;AAQI,IAAA,SAAS,EAAE,IARf;AASI,IAAA,IAAI,EAAC,UATT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CAFJ,EAeI,MAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,MAAC,SAAD;AACI,IAAA,EAAE,EAAC,UADP;AAEI,IAAA,KAAK,EAAC,oBAFV;AAGI,IAAA,MAAM,EAAC,QAHX;AAII,IAAA,eAAe,EAAE;AACbF,MAAAA,MAAM,EAAE;AADK,KAJrB;AAOI,IAAA,KAAK,EAAE;AAAEC,MAAAA,MAAM,EAAE,EAAV;AAAcC,MAAAA,KAAK,EAAE;AAArB,KAPX;AAQI,IAAA,IAAI,EAAC,UART;AASI,IAAA,IAAI,EAAC,UATT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CAfJ,EA4BI,MAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,MAAC,MAAD;AAAQ,IAAA,IAAI,EAAC,QAAb;AAAsB,IAAA,OAAO,EAAC,WAA9B;AAA0C,IAAA,KAAK,EAAC,SAAhD;AAA0D,IAAA,KAAK,EAAE;AAAED,MAAAA,MAAM,EAAE;AAAV,KAAjE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gCADJ,CA5BJ,CAFJ,CAJG,CAAP;AAwCH;KAzCuBL,S","sourcesContent":["import { parseBody } from \"next/dist/next-server/server/api-utils\"\r\nimport { APIStatus } from \"../../lib/common\";\r\nimport Head from \"next/head\";\r\nimport { Box, Button, Paper, TextField } from \"@material-ui/core\";\r\nimport styles from \"./login.module.css\";\r\n\r\n/*\r\nLogin page that is used on stg/uat/prd is only run from internal-hrm code repo.\r\n'Login.js' file of other repos is only used for local testing.\r\n\r\nThis file have 2 ways to use:\r\n+ GET method: display login page with login form\r\n+ POST method: receive submitted login data (username/password)\r\n*/\r\nexport async function getServerSideProps(ctx) {\r\n    let returnObject = { props: {} }\r\n    if (ctx.req && ctx.req.method === \"POST\") {\r\n\r\n        // read form data\r\n        let body = await parseBody(ctx.req, '1kb')\r\n\r\n        // call backend API\r\n        const response = await fetch(`${process.env.API_HOST}/core/account/v1/authentication`, {\r\n            method: \"POST\",\r\n            contentType: \"application/json\",\r\n            body: JSON.stringify({\r\n                username: body.username,\r\n                password: body.password,\r\n                type: \"EMPLOYEE\"\r\n            }),\r\n            headers: {\r\n                \"User-Agent\": ctx.req.headers['user-agent'],\r\n                \"X-Forwarded-For\": ctx.req.headers['x-forwarded-for'],\r\n            }\r\n        })\r\n        const result = await response.json()\r\n\r\n        // if OK, do set cookie & redirect page to relative target\r\n        if (result.status === APIStatus.OK) {\r\n            let data = result.data[0]\r\n            let url = body.url || \"/\"\r\n            let res = ctx.res\r\n            res.setHeader(\"set-cookie\", `session_token=${data.bearerToken}; Path=/; HttpOnly`)\r\n            res.setHeader(\"location\", url);\r\n            res.statusCode = 302;\r\n            res.end();\r\n        }\r\n\r\n        returnObject.props.url = body.url\r\n    } else {\r\n        returnObject.props.url = ctx.query.url || \"/\"\r\n    }\r\n    return returnObject\r\n\r\n}\r\n\r\n/*\r\nA simple login page.\r\nCan customize to display more.\r\nLoginForm has basic inputs of authentication flow:\r\n+ Login label\r\n+ Username / password input\r\n+ Submit button\r\n*/\r\nexport default function LoginPage(props) {\r\n    return <div>\r\n        <Head>\r\n            <title>Đăng nhập vào hệ thống nội bộ</title>\r\n        </Head>\r\n        <Paper className={styles.loginForm}>\r\n            <h1>Đăng nhập</h1>\r\n            <form method=\"POST\" action=\"/login\">\r\n                <input type=\"hidden\" name=\"url\" value={props.url} />\r\n                <Box>\r\n                    <TextField\r\n                        id=\"username\"\r\n                        label=\"Tên tài khoản\"\r\n                        margin=\"normal\"\r\n                        InputLabelProps={{\r\n                            shrink: true,\r\n                        }}\r\n                        style={{ margin: 12, width: 280 }}\r\n                        autoFocus={true}\r\n                        name=\"username\"\r\n                    />\r\n                </Box>\r\n                <Box>\r\n                    <TextField\r\n                        id=\"password\"\r\n                        label=\"Mật khẩu\"\r\n                        margin=\"normal\"\r\n                        InputLabelProps={{\r\n                            shrink: true,\r\n                        }}\r\n                        style={{ margin: 12, width: 280 }}\r\n                        name=\"password\"\r\n                        type=\"password\"\r\n                    />\r\n                </Box>\r\n                <Box>\r\n                    <Button type=\"submit\" variant=\"contained\" color=\"primary\" style={{ margin: 8 }}>Đăng nhập</Button>\r\n                </Box>\r\n            </form>\r\n        </Paper>\r\n    </div>\r\n}\r\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"var _jsxFileName = \"D:\\\\Learning\\\\Learning\\\\HKI_NamTu\\\\MoHinhHoaPhanMem\\\\KTXSHOP\\\\Source\\\\FE-KTXSHOP-SELLER\\\\component\\\\image-upload-field\\\\index.js\";\nvar __jsx = React.createElement;\nimport React, { useState, useRef } from \"react\";\nimport { Box, createStyles, Fab, Grid, IconButton, Typography } from \"@material-ui/core\";\nimport { Close } from \"@material-ui/icons\";\nimport { AddAPhoto } from \"@material-ui/icons\";\nimport Image from \"next/image\";\nimport ModalCropper from \"../cropper-v2\";\nconst styles = createStyles({\n  imageContainer: {\n    position: \"relative\",\n    marginRight: 8\n  },\n  removeButton: {\n    position: \"absolute\",\n    top: -4,\n    right: -4\n  },\n  addButton: {\n    cursor: \"pointer\"\n  }\n});\nexport default function ImageUploadField({\n  images = [],\n  hintText = \"Thêm hình ảnh\",\n  title = \"Cập nhật hình ảnh\",\n  buttonText = \"Upload\",\n  handleCropImage,\n  handleCropCallback,\n  handleRemoveImage,\n  limit = 5,\n  required = false\n}) {\n  const {\n    0: addProductImageModalOpen,\n    1: setAddProductImageModalOpen\n  } = useState(false);\n  const imageRef = useRef(null);\n  return __jsx(Box, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 9\n    }\n  }, __jsx(Grid, {\n    container: true,\n    spacing: 1,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 13\n    }\n  }, __jsx(ModalCropper, {\n    open: addProductImageModalOpen,\n    onClose: () => setAddProductImageModalOpen(false),\n    title: title,\n    text: buttonText,\n    handleCrop: (...props) => {\n      handleCropImage === null || handleCropImage === void 0 ? void 0 : handleCropImage(...props);\n      setAddProductImageModalOpen(false);\n    },\n    myRef: imageRef,\n    callback: (...props) => {\n      handleCropCallback(...props);\n      setAddProductImageModalOpen(false);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 17\n    }\n  }), images.map((url, i) => __jsx(Grid, {\n    key: `gr_${i}`,\n    item: true,\n    style: styles.imageContainer,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 21\n    }\n  }, __jsx(Image, {\n    src: url,\n    width: 100,\n    height: 100,\n    objectFit: \"contain\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 25\n    }\n  }), __jsx(IconButton, {\n    style: styles.removeButton,\n    size: \"small\",\n    color: \"secondary\",\n    onClick: () => {\n      handleRemoveImage === null || handleRemoveImage === void 0 ? void 0 : handleRemoveImage(url);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 25\n    }\n  }, __jsx(Close, {\n    fontSize: \"small\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 29\n    }\n  })))), __jsx(Grid, {\n    item: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 17\n    }\n  }, __jsx(Box, {\n    visibility: (images === null || images === void 0 ? void 0 : images.length) >= limit ? 'hidden' : 'visible',\n    style: styles.addButton,\n    border: 2,\n    borderColor: \"grey.500\",\n    borderRadius: 6,\n    display: \"flex\",\n    flexDirection: \"column\",\n    alignItems: \"center\",\n    justifyContent: \"flex-end\",\n    color: \"grey.500\",\n    height: 100,\n    width: 100,\n    onClick: () => setAddProductImageModalOpen(true),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 21\n    }\n  }, __jsx(Box, {\n    padding: 0.5,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 25\n    }\n  }, __jsx(AddAPhoto, {\n    width: 30,\n    height: 30,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 29\n    }\n  })), __jsx(Typography, {\n    variant: \"caption\",\n    align: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 25\n    }\n  }, hintText), __jsx(Typography, {\n    variant: \"caption\",\n    align: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 25\n    }\n  }, required ? \"(Bắt buộc)\" : \"(Không bắt buộc)\")))));\n}","map":{"version":3,"sources":["D:/Learning/Learning/HKI_NamTu/MoHinhHoaPhanMem/KTXSHOP/Source/FE-KTXSHOP-SELLER/component/image-upload-field/index.js"],"names":["React","useState","useRef","Box","createStyles","Fab","Grid","IconButton","Typography","Close","AddAPhoto","Image","ModalCropper","styles","imageContainer","position","marginRight","removeButton","top","right","addButton","cursor","ImageUploadField","images","hintText","title","buttonText","handleCropImage","handleCropCallback","handleRemoveImage","limit","required","addProductImageModalOpen","setAddProductImageModalOpen","imageRef","props","map","url","i","length"],"mappings":"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","sourcesContent":["import React, { useState, useRef } from \"react\";\r\nimport {\r\n    Box,\r\n    createStyles,\r\n    Fab,\r\n    Grid,\r\n    IconButton,\r\n    Typography,\r\n} from \"@material-ui/core\";\r\nimport { Close } from \"@material-ui/icons\";\r\nimport { AddAPhoto } from \"@material-ui/icons\";\r\nimport Image from \"next/image\";\r\n\r\nimport ModalCropper from \"../cropper-v2\";\r\n\r\nconst styles = createStyles({\r\n    imageContainer: {\r\n        position: \"relative\",\r\n        marginRight: 8,\r\n    },\r\n    removeButton: {\r\n        position: \"absolute\",\r\n        top: -4,\r\n        right: -4,\r\n    },\r\n    addButton: {\r\n        cursor: \"pointer\",\r\n    },\r\n});\r\n\r\nexport default function ImageUploadField({\r\n    images = [],\r\n    hintText = \"Thêm hình ảnh\",\r\n    title = \"Cập nhật hình ảnh\",\r\n    buttonText = \"Upload\",\r\n    handleCropImage,\r\n    handleCropCallback,\r\n    handleRemoveImage,\r\n    limit = 5,\r\n    required = false,\r\n}) {\r\n    const [addProductImageModalOpen, setAddProductImageModalOpen] = useState(\r\n        false\r\n    );\r\n\r\n    const imageRef = useRef(null);\r\n\r\n    return (\r\n        <Box>\r\n            <Grid container spacing={1}>\r\n                <ModalCropper\r\n                    open={addProductImageModalOpen}\r\n                    onClose={() => setAddProductImageModalOpen(false)}\r\n                    title={title}\r\n                    text={buttonText}\r\n                    handleCrop={(...props) => {\r\n                        handleCropImage?.(...props);\r\n                        setAddProductImageModalOpen(false);\r\n                    }}\r\n                    myRef={imageRef}\r\n                    callback={(...props) => {\r\n                        handleCropCallback(...props);\r\n                        setAddProductImageModalOpen(false);\r\n                    }}\r\n                />\r\n                {images.map((url, i) => (\r\n                    <Grid key={`gr_${i}`} item style={styles.imageContainer}>\r\n                        <Image src={url} width={100} height={100} objectFit=\"contain\" />\r\n                        <IconButton\r\n                            style={styles.removeButton}\r\n                            size=\"small\"\r\n                            color=\"secondary\"\r\n                            onClick={() => {\r\n                                handleRemoveImage?.(url);\r\n                            }}\r\n                        >\r\n                            <Close fontSize=\"small\" />\r\n                        </IconButton>\r\n                    </Grid>\r\n                ))}\r\n                <Grid item>\r\n                    <Box\r\n                        visibility={images?.length >= limit ? 'hidden' : 'visible'}\r\n                        style={styles.addButton}\r\n                        border={2}\r\n                        borderColor=\"grey.500\"\r\n                        borderRadius={6}\r\n                        display=\"flex\"\r\n                        flexDirection=\"column\"\r\n                        alignItems=\"center\"\r\n                        justifyContent=\"flex-end\"\r\n                        color=\"grey.500\"\r\n                        height={100}\r\n                        width={100}\r\n                        onClick={() => setAddProductImageModalOpen(true)}\r\n                    >\r\n                        <Box padding={0.5}>\r\n                            <AddAPhoto width={30} height={30} />\r\n                        </Box>\r\n                        <Typography variant=\"caption\" align=\"center\">\r\n                            {hintText}\r\n                        </Typography>\r\n                        <Typography variant=\"caption\" align=\"center\">\r\n                            {required ? \"(Bắt buộc)\" : \"(Không bắt buộc)\"}\r\n                        </Typography>\r\n                    </Box>\r\n                </Grid>\r\n            </Grid>\r\n        </Box>\r\n    );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}
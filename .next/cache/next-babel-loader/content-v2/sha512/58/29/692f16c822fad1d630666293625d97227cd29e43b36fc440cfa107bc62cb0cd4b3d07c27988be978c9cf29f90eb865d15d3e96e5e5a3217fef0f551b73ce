{"ast":null,"code":"var _jsxFileName = \"/home/hao/Deadline/mhhpm_18_3_final/FE-KTXSHOP-SELLER/pages/cms/order/edit.js\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport Head from \"next/head\";\nimport React, { useState } from \"react\";\nimport { useForm } from \"react-hook-form\";\nimport { Box, Button, CircularProgress, FormGroup, Grid, Link, Paper, TextField } from \"@material-ui/core\";\nimport { doWithLoggedInUser, renderWithLoggedInUser } from \"../../../lib/login\";\nimport { MyCard, MyCardContent, MyCardHeader } from \"../../../component/my-card/my-card\";\nimport styles from \"./order.module.css\";\nexport async function getServerSideProps(ctx) {\n  return await doWithLoggedInUser(ctx, ctx => {\n    return loadIngredientData(ctx);\n  });\n}\nexport async function loadIngredientData(ctx) {\n  let data = {\n    props: {\n      data: []\n    }\n  };\n  let id = ctx.query.orderId;\n  await fetch(process.env.API_HOST + '/api/orders/' + id).then(response => response.json()).then(res => {\n    data.props.data.push(_objectSpread(_objectSpread({}, res.data.attributes), {}, {\n      id: id\n    }));\n  });\n  return data;\n}\nexport default function EditPage(props) {\n  return renderWithLoggedInUser(props, render);\n}\n\nfunction render(props) {\n  var _errors$name;\n\n  // let _client = getIngredientClient();\n  const {\n    0: loading,\n    1: setLoading\n  } = useState(false);\n  const data = props.data[0];\n\n  if (props.status && props.status !== \"OK\") {\n    return __jsx(AppCMS, {\n      select: \"/cms/ingredient\",\n      breadcrumb: breadcrumb,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 13\n      }\n    }, __jsx(Head, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 17\n      }\n    }, __jsx(\"title\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 21\n      }\n    }, \"C\\u1EADp nh\\u1EADt h\\xF3a \\u0111\\u01A1n\")), __jsx(MyCard, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 17\n      }\n    }, __jsx(MyCardHeader, {\n      title: \"C\\u1EADp nh\\u1EADt h\\xF3a \\u0111\\u01A1n\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 21\n      }\n    }), __jsx(Box, {\n      component: Paper,\n      display: \"block\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 21\n      }\n    }, __jsx(FormGroup, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 25\n      }\n    }, __jsx(\"form\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 29\n      }\n    }, __jsx(Grid, {\n      container: true,\n      spacing: 3,\n      direction: \"row\",\n      justify: \"space-between\",\n      alignItems: \"flex-start\",\n      className: styles.contentPadding,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 33\n      }\n    }, __jsx(Grid, {\n      item: true,\n      xs: 12,\n      md: 12,\n      sm: 12,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 37\n      }\n    }, __jsx(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 41\n      }\n    }, props.message)))))), __jsx(Box, {\n      component: Paper,\n      display: \"block\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 21\n      }\n    })));\n  }\n\n  const {\n    register,\n    handleSubmit,\n    errors,\n    setValue,\n    reset\n  } = useForm({\n    defaultValues: data,\n    mode: \"onChange\"\n  });\n\n  async function updateIngredient(formData) {\n    let data = {\n      props: {}\n    };\n    setLoading(true);\n    data.props = await _client.updateIngredient(formData);\n    setLoading(false);\n\n    if (data.props.status === \"OK\") {\n      success(\"Cập nhật thông tin hóa đơn thành công\");\n      reset({});\n    } else {\n      error(data.props.message || \"Thao tác không thành công, vui lòng thử lại sau\");\n    }\n  } // func onSubmit used because useForm not working with some fields\n\n\n  async function onSubmit(formData) {\n    try {\n      formData.name = formData === null || formData === void 0 ? void 0 : formData.name.trim().replace(/\\s+/g, \" \");\n      formData.code = data.code;\n      await updateIngredient(formData);\n    } catch (err) {\n      setLoading(false);\n      error(err.message || err.toString());\n    }\n  }\n\n  let breadcrumb = [{\n    name: \"Trang chủ\",\n    link: \"/cms\"\n  }, {\n    name: \"Danh sách hóa đơn\",\n    link: \"/cms/ingredient\"\n  }, {\n    name: \"Cập nhật hóa đơn\"\n  }];\n  return __jsx(\"div\", {\n    select: \"/cms/ingredient\",\n    breadcrumb: breadcrumb,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 9\n    }\n  }, __jsx(Head, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 13\n    }\n  }, __jsx(\"title\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 17\n    }\n  }, \"C\\u1EADp nh\\u1EADt h\\xF3a \\u0111\\u01A1n\")), __jsx(MyCard, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 13\n    }\n  }, __jsx(MyCardHeader, {\n    title: \"hóa đơn #\" + data.id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 17\n    }\n  }), __jsx(FormGroup, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 17\n    }\n  }, __jsx(MyCardContent, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 21\n    }\n  }, __jsx(\"form\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 25\n    }\n  }, __jsx(Grid, {\n    container: true,\n    item: true,\n    xs: 12,\n    md: 6,\n    sm: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 29\n    }\n  }, __jsx(Grid, {\n    item: true,\n    xs: 12,\n    md: 12,\n    sm: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 33\n    }\n  }, __jsx(TextField, {\n    id: \"AccountID\",\n    name: \"AccountID\",\n    label: \"Kh\\xE1ch h\\xE0ng\",\n    placeholder: \"\",\n    helperText: (_errors$name = errors.name) === null || _errors$name === void 0 ? void 0 : _errors$name.message,\n    margin: \"normal\",\n    variant: \"outlined\",\n    size: \"small\",\n    InputLabelProps: {\n      shrink: true\n    },\n    style: {\n      margin: 12,\n      width: \"calc(100% - 24px)\"\n    },\n    error: errors.name ? true : false,\n    required: true,\n    inputRef: register({\n      required: \"Vui lòng nhập tên hóa đơn\",\n      maxLength: {\n        value: 250,\n        message: \"Tên hóa đơn có độ dài tối đa 250 kí tự\"\n      },\n      minLength: {\n        value: 1,\n        message: \"Tên hóa đơn có độ dài tối thiểu 1 kí tự\"\n      },\n      pattern: {\n        value: /^(?!.*[ ]{2})/,\n        message: \"Tên không hợp lệ (không được dư khoảng trắng).\"\n      }\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 37\n    }\n  })), __jsx(Grid, {\n    item: true,\n    xs: 12,\n    md: 6,\n    sm: 6,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 170,\n      columnNumber: 33\n    }\n  }, __jsx(TextField, {\n    id: \"ProductID\",\n    name: \"ProductID\",\n    label: \"S\\u1EA3n ph\\u1EA9m\",\n    placeholder: \"\",\n    variant: \"outlined\",\n    size: \"small\",\n    margin: \"normal\",\n    multiline: true,\n    rows: 7,\n    InputLabelProps: {\n      shrink: true\n    },\n    style: {\n      margin: 12,\n      width: \"calc(100% - 24px)\"\n    },\n    inputRef: register,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 171,\n      columnNumber: 37\n    }\n  })), __jsx(Grid, {\n    item: true,\n    xs: 12,\n    md: 6,\n    sm: 6,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 188,\n      columnNumber: 33\n    }\n  }, __jsx(TextField, {\n    id: \"Quantity\",\n    name: \"Quantity\",\n    label: \"S\\u1ED1 l\\u01B0\\u1EE3ng\",\n    placeholder: \"\",\n    variant: \"outlined\",\n    size: \"small\",\n    margin: \"normal\",\n    multiline: true,\n    rows: 7,\n    InputLabelProps: {\n      shrink: true\n    },\n    style: {\n      margin: 12,\n      width: \"calc(100% - 24px)\"\n    },\n    inputRef: register,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 189,\n      columnNumber: 37\n    }\n  }))), __jsx(Grid, {\n    item: true,\n    xs: 12,\n    md: 12,\n    sm: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 207,\n      columnNumber: 29\n    }\n  }, __jsx(Link, {\n    href: \"/cms/order\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 208,\n      columnNumber: 33\n    }\n  }, __jsx(Button, {\n    variant: \"contained\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 209,\n      columnNumber: 37\n    }\n  }, \"Tr\\u1EDF l\\u1EA1i\"))))))));\n}","map":{"version":3,"sources":["/home/hao/Deadline/mhhpm_18_3_final/FE-KTXSHOP-SELLER/pages/cms/order/edit.js"],"names":["Head","React","useState","useForm","Box","Button","CircularProgress","FormGroup","Grid","Link","Paper","TextField","doWithLoggedInUser","renderWithLoggedInUser","MyCard","MyCardContent","MyCardHeader","styles","getServerSideProps","ctx","loadIngredientData","data","props","id","query","orderId","fetch","process","env","API_HOST","then","response","json","res","push","attributes","EditPage","render","loading","setLoading","status","breadcrumb","contentPadding","message","register","handleSubmit","errors","setValue","reset","defaultValues","mode","updateIngredient","formData","_client","success","error","onSubmit","name","trim","replace","code","err","toString","link","shrink","margin","width","required","maxLength","value","minLength","pattern"],"mappings":"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","sourcesContent":["import Head from \"next/head\";\nimport React, { useState } from \"react\";\nimport { useForm } from \"react-hook-form\";\n\nimport {\n    Box, Button, CircularProgress,\n    FormGroup, Grid, Link, Paper, TextField\n} from \"@material-ui/core\";\nimport {\n    doWithLoggedInUser,\n    renderWithLoggedInUser\n} from \"../../../lib/login\";\nimport { MyCard, MyCardContent, MyCardHeader } from \"../../../component/my-card/my-card\";\nimport styles from \"./order.module.css\";\n\nexport async function getServerSideProps(ctx) {\n    return await doWithLoggedInUser(ctx, (ctx) => {\n        return loadIngredientData(ctx);\n    });\n}\n\nexport async function loadIngredientData(ctx) {\n    let data = {\n        props: {\n            data: [],\n        }\n    };\n    let id = ctx.query.orderId;\n    await fetch(process.env.API_HOST + '/api/orders/' + id)\n        .then(response => response.json())\n        .then(res => {\n            data.props.data.push({ ...res.data.attributes, id: id })\n        });\n    return data;\n}\n\nexport default function EditPage(props) {\n    return renderWithLoggedInUser(props, render);\n}\n\n\nfunction render(props) {\n    // let _client = getIngredientClient();\n    const [loading, setLoading] = useState(false);\n    const data = props.data[0]\n    if (props.status && props.status !== \"OK\") {\n        return (\n            <AppCMS select=\"/cms/ingredient\" breadcrumb={breadcrumb}>\n                <Head>\n                    <title>Cập nhật hóa đơn</title>\n                </Head>\n                <MyCard>\n                    <MyCardHeader title=\"Cập nhật hóa đơn\" />\n                    <Box component={Paper} display=\"block\">\n                        <FormGroup>\n                            <form>\n                                <Grid\n                                    container\n                                    spacing={3}\n                                    direction=\"row\"\n                                    justify=\"space-between\"\n                                    alignItems=\"flex-start\"\n                                    className={styles.contentPadding}\n                                >\n                                    <Grid item xs={12} md={12} sm={12}>\n                                        <span>{props.message}</span>\n                                    </Grid>\n                                </Grid>\n                            </form>\n                        </FormGroup>\n                    </Box>\n                    <Box component={Paper} display=\"block\"></Box>\n                </MyCard>\n            </AppCMS>\n        );\n    }\n\n    const { register, handleSubmit, errors, setValue, reset } = useForm({\n        defaultValues: data,\n        mode: \"onChange\",\n    });\n\n    async function updateIngredient(formData) {\n        let data = { props: {} };\n        setLoading(true);\n        data.props = await _client.updateIngredient(formData);\n        setLoading(false);\n        if (data.props.status === \"OK\") {\n            success(\"Cập nhật thông tin hóa đơn thành công\");\n            reset({})\n        } else {\n            error(\n                data.props.message || \"Thao tác không thành công, vui lòng thử lại sau\"\n            );\n        }\n    }\n\n    // func onSubmit used because useForm not working with some fields\n    async function onSubmit(formData) {\n        try {\n            formData.name = formData?.name.trim().replace(/\\s+/g, \" \");\n            formData.code = data.code\n            await updateIngredient(formData);\n        } catch (err) {\n            setLoading(false);\n            error(err.message || err.toString());\n        }\n    }\n\n    let breadcrumb = [\n        {\n            name: \"Trang chủ\",\n            link: \"/cms\"\n        },\n        {\n            name: \"Danh sách hóa đơn\",\n            link: \"/cms/ingredient\"\n        },\n        {\n            name: \"Cập nhật hóa đơn\",\n        }\n    ]\n\n\n    return (\n        <div select=\"/cms/ingredient\" breadcrumb={breadcrumb}>\n            <Head>\n                <title>Cập nhật hóa đơn</title>\n            </Head>\n            <MyCard>\n                <MyCardHeader title={\"hóa đơn #\" + data.id} />\n                <FormGroup>\n                    <MyCardContent>\n                        <form>\n\n                            <Grid container item xs={12} md={6} sm={12}>\n                                <Grid item xs={12} md={12} sm={12}>\n                                    <TextField\n                                        id=\"AccountID\"\n                                        name=\"AccountID\"\n                                        label=\"Khách hàng\"\n                                        placeholder=\"\"\n                                        helperText={errors.name?.message}\n                                        margin=\"normal\"\n                                        variant=\"outlined\"\n                                        size=\"small\"\n                                        InputLabelProps={{\n                                            shrink: true,\n                                        }}\n                                        style={{ margin: 12, width: \"calc(100% - 24px)\" }}\n                                        error={errors.name ? true : false}\n                                        required\n                                        inputRef={register({\n                                            required: \"Vui lòng nhập tên hóa đơn\",\n                                            maxLength: {\n                                                value: 250,\n                                                message: \"Tên hóa đơn có độ dài tối đa 250 kí tự\",\n                                            },\n                                            minLength: {\n                                                value: 1,\n                                                message: \"Tên hóa đơn có độ dài tối thiểu 1 kí tự\",\n                                            },\n                                            pattern: {\n                                                value: /^(?!.*[ ]{2})/,\n                                                message: \"Tên không hợp lệ (không được dư khoảng trắng).\"\n                                            },\n                                        })}\n                                    />\n                                </Grid>\n                                <Grid item xs={12} md={6} sm={6}>\n                                    <TextField\n                                        id=\"ProductID\"\n                                        name=\"ProductID\"\n                                        label=\"Sản phẩm\"\n                                        placeholder=\"\"\n                                        variant=\"outlined\"\n                                        size=\"small\"\n                                        margin=\"normal\"\n                                        multiline\n                                        rows={7}\n                                        InputLabelProps={{\n                                            shrink: true,\n                                        }}\n                                        style={{ margin: 12, width: \"calc(100% - 24px)\" }}\n                                        inputRef={register}\n                                    />\n                                </Grid>\n                                <Grid item xs={12} md={6} sm={6}>\n                                    <TextField\n                                        id=\"Quantity\"\n                                        name=\"Quantity\"\n                                        label=\"Số lượng\"\n                                        placeholder=\"\"\n                                        variant=\"outlined\"\n                                        size=\"small\"\n                                        margin=\"normal\"\n                                        multiline\n                                        rows={7}\n                                        InputLabelProps={{\n                                            shrink: true,\n                                        }}\n                                        style={{ margin: 12, width: \"calc(100% - 24px)\" }}\n                                        inputRef={register}\n                                    />\n                                </Grid>\n                            </Grid>\n                            <Grid item xs={12} md={12} sm={12}>\n                                <Link href=\"/cms/order\">\n                                    <Button\n                                        variant=\"contained\"\n                                    >\n                                        Trở lại\n                                    </Button>\n                                </Link>\n                            </Grid>\n                        </form>\n                    </MyCardContent>\n                </FormGroup>\n            </MyCard>\n        </div>\n    );\n}\n"]},"metadata":{},"sourceType":"module"}